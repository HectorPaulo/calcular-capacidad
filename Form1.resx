<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>